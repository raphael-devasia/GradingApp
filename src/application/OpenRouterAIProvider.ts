
import fetch from "node-fetch" 
import { IAIProvider } from "../domain/repositories/ai-provider.interface"
import { IAssignment } from "../domain/models/assignment.interface"

export class OpenRouterAIProvider implements IAIProvider {
    private readonly apiKey: string
    private readonly apiUrl: string =
        "https://openrouter.ai/api/v1/chat/completions"

    constructor(apiKey: string) {
        this.apiKey = apiKey
    }

    async generateAssignmentContent(
        prompt: string,
        assignmentDetails: Partial<IAssignment>,
        fileContent?: string
    ): Promise<Partial<IAssignment>> {
        try {
            const response = await fetch(this.apiUrl, {
                method: "POST",
                headers: {
                    Authorization: `Bearer ${this.apiKey}`,
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    model: "deepseek/v3", 
                    messages: [
                        {
                            role: "system",
                            content:
                                "Generate assignment content in JSON format.",
                        },
                        { role: "user", content: prompt },
                    ],
                }),
            })

            if (!response.ok) {
                throw new Error(`OpenRouter API error: ${response.statusText}`)
            }

            const data = await response.json()
            const content = data.choices[0]?.message?.content

            if (!content) {
                throw new Error("No content generated by the API")
            }

            // Parse the JSON content into Partial<IAssignment>
            const generatedContent: Partial<IAssignment> = JSON.parse(content)
            console.log(generatedContent)
            

            return generatedContent
        } catch (error) {
            console.error("Error generating content with OpenRouter:", error)
            throw new Error("Failed to generate assignment content")
        }
    }
}
